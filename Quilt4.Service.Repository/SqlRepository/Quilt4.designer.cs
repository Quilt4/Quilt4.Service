#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Quilt4.Service.Repository.SqlRepository
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Quilt4")]
	public partial class Quilt4DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDashboardPageProject(DashboardPageProject instance);
    partial void UpdateDashboardPageProject(DashboardPageProject instance);
    partial void DeleteDashboardPageProject(DashboardPageProject instance);
    partial void InsertVersionPageVersion(VersionPageVersion instance);
    partial void UpdateVersionPageVersion(VersionPageVersion instance);
    partial void DeleteVersionPageVersion(VersionPageVersion instance);
    partial void InsertIssueTypePageIssue(IssueTypePageIssue instance);
    partial void UpdateIssueTypePageIssue(IssueTypePageIssue instance);
    partial void DeleteIssueTypePageIssue(IssueTypePageIssue instance);
    partial void InsertIssueTypePageIssueType(IssueTypePageIssueType instance);
    partial void UpdateIssueTypePageIssueType(IssueTypePageIssueType instance);
    partial void DeleteIssueTypePageIssueType(IssueTypePageIssueType instance);
    partial void InsertProjectPageApplication(ProjectPageApplication instance);
    partial void UpdateProjectPageApplication(ProjectPageApplication instance);
    partial void DeleteProjectPageApplication(ProjectPageApplication instance);
    partial void InsertProjectPageProject(ProjectPageProject instance);
    partial void UpdateProjectPageProject(ProjectPageProject instance);
    partial void DeleteProjectPageProject(ProjectPageProject instance);
    partial void InsertProjectPageVersion(ProjectPageVersion instance);
    partial void UpdateProjectPageVersion(ProjectPageVersion instance);
    partial void DeleteProjectPageVersion(ProjectPageVersion instance);
    partial void InsertVersionPageIssueType(VersionPageIssueType instance);
    partial void UpdateVersionPageIssueType(VersionPageIssueType instance);
    partial void DeleteVersionPageIssueType(VersionPageIssueType instance);
    #endregion
		
		public Quilt4DataContext() : 
				base(global::Quilt4.Service.Repository.Properties.Settings.Default.Quilt4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Quilt4DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Quilt4DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Quilt4DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Quilt4DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DashboardPageProject> DashboardPageProjects
		{
			get
			{
				return this.GetTable<DashboardPageProject>();
			}
		}
		
		public System.Data.Linq.Table<VersionPageVersion> VersionPageVersions
		{
			get
			{
				return this.GetTable<VersionPageVersion>();
			}
		}
		
		public System.Data.Linq.Table<IssueTypePageIssue> IssueTypePageIssues
		{
			get
			{
				return this.GetTable<IssueTypePageIssue>();
			}
		}
		
		public System.Data.Linq.Table<IssueTypePageIssueType> IssueTypePageIssueTypes
		{
			get
			{
				return this.GetTable<IssueTypePageIssueType>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPageApplication> ProjectPageApplications
		{
			get
			{
				return this.GetTable<ProjectPageApplication>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPageProject> ProjectPageProjects
		{
			get
			{
				return this.GetTable<ProjectPageProject>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPageVersion> ProjectPageVersions
		{
			get
			{
				return this.GetTable<ProjectPageVersion>();
			}
		}
		
		public System.Data.Linq.Table<VersionPageIssueType> VersionPageIssueTypes
		{
			get
			{
				return this.GetTable<VersionPageIssueType>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DashboardPageProject")]
	public partial class DashboardPageProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private int _Versions;
		
		private int _Sessions;
		
		private int _IssueTypes;
		
		private int _Issues;
		
		private string _DashboardColor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVersionsChanging(int value);
    partial void OnVersionsChanged();
    partial void OnSessionsChanging(int value);
    partial void OnSessionsChanged();
    partial void OnIssueTypesChanging(int value);
    partial void OnIssueTypesChanged();
    partial void OnIssuesChanging(int value);
    partial void OnIssuesChanged();
    partial void OnDashboardColorChanging(string value);
    partial void OnDashboardColorChanged();
    #endregion
		
		public DashboardPageProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Versions", DbType="Int NOT NULL")]
		public int Versions
		{
			get
			{
				return this._Versions;
			}
			set
			{
				if ((this._Versions != value))
				{
					this.OnVersionsChanging(value);
					this.SendPropertyChanging();
					this._Versions = value;
					this.SendPropertyChanged("Versions");
					this.OnVersionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessions", DbType="Int NOT NULL")]
		public int Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				if ((this._Sessions != value))
				{
					this.OnSessionsChanging(value);
					this.SendPropertyChanging();
					this._Sessions = value;
					this.SendPropertyChanged("Sessions");
					this.OnSessionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTypes", DbType="Int NOT NULL")]
		public int IssueTypes
		{
			get
			{
				return this._IssueTypes;
			}
			set
			{
				if ((this._IssueTypes != value))
				{
					this.OnIssueTypesChanging(value);
					this.SendPropertyChanging();
					this._IssueTypes = value;
					this.SendPropertyChanged("IssueTypes");
					this.OnIssueTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issues", DbType="Int NOT NULL")]
		public int Issues
		{
			get
			{
				return this._Issues;
			}
			set
			{
				if ((this._Issues != value))
				{
					this.OnIssuesChanging(value);
					this.SendPropertyChanging();
					this._Issues = value;
					this.SendPropertyChanged("Issues");
					this.OnIssuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardColor", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DashboardColor
		{
			get
			{
				return this._DashboardColor;
			}
			set
			{
				if ((this._DashboardColor != value))
				{
					this.OnDashboardColorChanging(value);
					this.SendPropertyChanging();
					this._DashboardColor = value;
					this.SendPropertyChanged("DashboardColor");
					this.OnDashboardColorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VersionPageVersion")]
	public partial class VersionPageVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProjectId;
		
		private System.Guid _ApplicaitonId;
		
		private string _ProjectName;
		
		private string _ApplicationName;
		
		private string _Version;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(System.Guid value);
    partial void OnProjectIdChanged();
    partial void OnApplicaitonIdChanging(System.Guid value);
    partial void OnApplicaitonIdChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    #endregion
		
		public VersionPageVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicaitonId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicaitonId
		{
			get
			{
				return this._ApplicaitonId;
			}
			set
			{
				if ((this._ApplicaitonId != value))
				{
					this.OnApplicaitonIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicaitonId = value;
					this.SendPropertyChanged("ApplicaitonId");
					this.OnApplicaitonIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IssueTypePageIssue")]
	public partial class IssueTypePageIssue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProjectId;
		
		private System.Guid _ApplicationId;
		
		private System.Guid _VersionId;
		
		private System.Guid _IssueTypeId;
		
		private System.DateTime _Time;
		
		private string _IssueUser;
		
		private string _Enviroment;
		
		private string _Data;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(System.Guid value);
    partial void OnProjectIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnVersionIdChanging(System.Guid value);
    partial void OnVersionIdChanged();
    partial void OnIssueTypeIdChanging(System.Guid value);
    partial void OnIssueTypeIdChanged();
    partial void OnTimeChanging(System.DateTime value);
    partial void OnTimeChanged();
    partial void OnIssueUserChanging(string value);
    partial void OnIssueUserChanged();
    partial void OnEnviromentChanging(string value);
    partial void OnEnviromentChanged();
    partial void OnDataChanging(string value);
    partial void OnDataChanged();
    #endregion
		
		public IssueTypePageIssue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTypeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid IssueTypeId
		{
			get
			{
				return this._IssueTypeId;
			}
			set
			{
				if ((this._IssueTypeId != value))
				{
					this.OnIssueTypeIdChanging(value);
					this.SendPropertyChanging();
					this._IssueTypeId = value;
					this.SendPropertyChanged("IssueTypeId");
					this.OnIssueTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time", DbType="DateTime NOT NULL")]
		public System.DateTime Time
		{
			get
			{
				return this._Time;
			}
			set
			{
				if ((this._Time != value))
				{
					this.OnTimeChanging(value);
					this.SendPropertyChanging();
					this._Time = value;
					this.SendPropertyChanged("Time");
					this.OnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueUser", DbType="NVarChar(MAX)")]
		public string IssueUser
		{
			get
			{
				return this._IssueUser;
			}
			set
			{
				if ((this._IssueUser != value))
				{
					this.OnIssueUserChanging(value);
					this.SendPropertyChanging();
					this._IssueUser = value;
					this.SendPropertyChanged("IssueUser");
					this.OnIssueUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enviroment", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Enviroment
		{
			get
			{
				return this._Enviroment;
			}
			set
			{
				if ((this._Enviroment != value))
				{
					this.OnEnviromentChanging(value);
					this.SendPropertyChanging();
					this._Enviroment = value;
					this.SendPropertyChanged("Enviroment");
					this.OnEnviromentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Data", DbType="NVarChar(MAX)")]
		public string Data
		{
			get
			{
				return this._Data;
			}
			set
			{
				if ((this._Data != value))
				{
					this.OnDataChanging(value);
					this.SendPropertyChanging();
					this._Data = value;
					this.SendPropertyChanged("Data");
					this.OnDataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IssueTypePageIssueType")]
	public partial class IssueTypePageIssueType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProjectId;
		
		private System.Guid _ApplicationId;
		
		private System.Guid _VersionId;
		
		private string _ProjectName;
		
		private string _ApplicationName;
		
		private string _Version;
		
		private int _Ticket;
		
		private string _Type;
		
		private string _Level;
		
		private string _Message;
		
		private string _StackTrace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(System.Guid value);
    partial void OnProjectIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnVersionIdChanging(System.Guid value);
    partial void OnVersionIdChanged();
    partial void OnProjectNameChanging(string value);
    partial void OnProjectNameChanged();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnTicketChanging(int value);
    partial void OnTicketChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnStackTraceChanging(string value);
    partial void OnStackTraceChanged();
    #endregion
		
		public IssueTypePageIssueType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ProjectName
		{
			get
			{
				return this._ProjectName;
			}
			set
			{
				if ((this._ProjectName != value))
				{
					this.OnProjectNameChanging(value);
					this.SendPropertyChanging();
					this._ProjectName = value;
					this.SendPropertyChanged("ProjectName");
					this.OnProjectNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string ApplicationName
		{
			get
			{
				return this._ApplicationName;
			}
			set
			{
				if ((this._ApplicationName != value))
				{
					this.OnApplicationNameChanging(value);
					this.SendPropertyChanging();
					this._ApplicationName = value;
					this.SendPropertyChanged("ApplicationName");
					this.OnApplicationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="Int NOT NULL")]
		public int Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this.OnTicketChanging(value);
					this.SendPropertyChanging();
					this._Ticket = value;
					this.SendPropertyChanged("Ticket");
					this.OnTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(MAX)")]
		public string Message
		{
			get
			{
				return this._Message;
			}
			set
			{
				if ((this._Message != value))
				{
					this.OnMessageChanging(value);
					this.SendPropertyChanging();
					this._Message = value;
					this.SendPropertyChanged("Message");
					this.OnMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StackTrace", DbType="NVarChar(MAX)")]
		public string StackTrace
		{
			get
			{
				return this._StackTrace;
			}
			set
			{
				if ((this._StackTrace != value))
				{
					this.OnStackTraceChanging(value);
					this.SendPropertyChanging();
					this._StackTrace = value;
					this.SendPropertyChanged("StackTrace");
					this.OnStackTraceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectPageApplication")]
	public partial class ProjectPageApplication : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProjectId;
		
		private string _Name;
		
		private int _Versions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(System.Guid value);
    partial void OnProjectIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnVersionsChanging(int value);
    partial void OnVersionsChanged();
    #endregion
		
		public ProjectPageApplication()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Versions", DbType="Int NOT NULL")]
		public int Versions
		{
			get
			{
				return this._Versions;
			}
			set
			{
				if ((this._Versions != value))
				{
					this.OnVersionsChanging(value);
					this.SendPropertyChanging();
					this._Versions = value;
					this.SendPropertyChanged("Versions");
					this.OnVersionsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectPageProject")]
	public partial class ProjectPageProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private string _Name;
		
		private string _DashboardColor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDashboardColorChanging(string value);
    partial void OnDashboardColorChanged();
    #endregion
		
		public ProjectPageProject()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DashboardColor", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string DashboardColor
		{
			get
			{
				return this._DashboardColor;
			}
			set
			{
				if ((this._DashboardColor != value))
				{
					this.OnDashboardColorChanging(value);
					this.SendPropertyChanging();
					this._DashboardColor = value;
					this.SendPropertyChanged("DashboardColor");
					this.OnDashboardColorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectPageVersion")]
	public partial class ProjectPageVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProjectId;
		
		private System.Guid _ApplicationId;
		
		private string _Version;
		
		private int _Sessions;
		
		private int _IssueTypes;
		
		private int _Issues;
		
		private System.Nullable<System.DateTime> _Last;
		
		private string _Enviroments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(System.Guid value);
    partial void OnProjectIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnVersionChanging(string value);
    partial void OnVersionChanged();
    partial void OnSessionsChanging(int value);
    partial void OnSessionsChanged();
    partial void OnIssueTypesChanging(int value);
    partial void OnIssueTypesChanged();
    partial void OnIssuesChanging(int value);
    partial void OnIssuesChanged();
    partial void OnLastChanging(System.Nullable<System.DateTime> value);
    partial void OnLastChanged();
    partial void OnEnviromentsChanging(string value);
    partial void OnEnviromentsChanged();
    #endregion
		
		public ProjectPageVersion()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Version", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Version
		{
			get
			{
				return this._Version;
			}
			set
			{
				if ((this._Version != value))
				{
					this.OnVersionChanging(value);
					this.SendPropertyChanging();
					this._Version = value;
					this.SendPropertyChanged("Version");
					this.OnVersionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sessions", DbType="Int NOT NULL")]
		public int Sessions
		{
			get
			{
				return this._Sessions;
			}
			set
			{
				if ((this._Sessions != value))
				{
					this.OnSessionsChanging(value);
					this.SendPropertyChanging();
					this._Sessions = value;
					this.SendPropertyChanged("Sessions");
					this.OnSessionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IssueTypes", DbType="Int NOT NULL")]
		public int IssueTypes
		{
			get
			{
				return this._IssueTypes;
			}
			set
			{
				if ((this._IssueTypes != value))
				{
					this.OnIssueTypesChanging(value);
					this.SendPropertyChanging();
					this._IssueTypes = value;
					this.SendPropertyChanged("IssueTypes");
					this.OnIssueTypesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issues", DbType="Int NOT NULL")]
		public int Issues
		{
			get
			{
				return this._Issues;
			}
			set
			{
				if ((this._Issues != value))
				{
					this.OnIssuesChanging(value);
					this.SendPropertyChanging();
					this._Issues = value;
					this.SendPropertyChanged("Issues");
					this.OnIssuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last", DbType="DateTime")]
		public System.Nullable<System.DateTime> Last
		{
			get
			{
				return this._Last;
			}
			set
			{
				if ((this._Last != value))
				{
					this.OnLastChanging(value);
					this.SendPropertyChanging();
					this._Last = value;
					this.SendPropertyChanged("Last");
					this.OnLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enviroments", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Enviroments
		{
			get
			{
				return this._Enviroments;
			}
			set
			{
				if ((this._Enviroments != value))
				{
					this.OnEnviromentsChanging(value);
					this.SendPropertyChanging();
					this._Enviroments = value;
					this.SendPropertyChanged("Enviroments");
					this.OnEnviromentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VersionPageIssueType")]
	public partial class VersionPageIssueType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _Id;
		
		private System.Guid _ProjectId;
		
		private System.Guid _ApplicationId;
		
		private System.Guid _VersionId;
		
		private int _Ticket;
		
		private string _Type;
		
		private int _Issues;
		
		private string _Level;
		
		private System.Nullable<System.DateTime> _LastIssue;
		
		private string _Enviroments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnProjectIdChanging(System.Guid value);
    partial void OnProjectIdChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnVersionIdChanging(System.Guid value);
    partial void OnVersionIdChanged();
    partial void OnTicketChanging(int value);
    partial void OnTicketChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnIssuesChanging(int value);
    partial void OnIssuesChanged();
    partial void OnLevelChanging(string value);
    partial void OnLevelChanged();
    partial void OnLastIssueChanging(System.Nullable<System.DateTime> value);
    partial void OnLastIssueChanged();
    partial void OnEnviromentsChanging(string value);
    partial void OnEnviromentsChanged();
    #endregion
		
		public VersionPageIssueType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProjectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ProjectId
		{
			get
			{
				return this._ProjectId;
			}
			set
			{
				if ((this._ProjectId != value))
				{
					this.OnProjectIdChanging(value);
					this.SendPropertyChanging();
					this._ProjectId = value;
					this.SendPropertyChanged("ProjectId");
					this.OnProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ApplicationId
		{
			get
			{
				return this._ApplicationId;
			}
			set
			{
				if ((this._ApplicationId != value))
				{
					this.OnApplicationIdChanging(value);
					this.SendPropertyChanging();
					this._ApplicationId = value;
					this.SendPropertyChanged("ApplicationId");
					this.OnApplicationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid VersionId
		{
			get
			{
				return this._VersionId;
			}
			set
			{
				if ((this._VersionId != value))
				{
					this.OnVersionIdChanging(value);
					this.SendPropertyChanging();
					this._VersionId = value;
					this.SendPropertyChanged("VersionId");
					this.OnVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ticket", DbType="Int NOT NULL")]
		public int Ticket
		{
			get
			{
				return this._Ticket;
			}
			set
			{
				if ((this._Ticket != value))
				{
					this.OnTicketChanging(value);
					this.SendPropertyChanging();
					this._Ticket = value;
					this.SendPropertyChanged("Ticket");
					this.OnTicketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Issues", DbType="Int NOT NULL")]
		public int Issues
		{
			get
			{
				return this._Issues;
			}
			set
			{
				if ((this._Issues != value))
				{
					this.OnIssuesChanging(value);
					this.SendPropertyChanging();
					this._Issues = value;
					this.SendPropertyChanged("Issues");
					this.OnIssuesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIssue", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastIssue
		{
			get
			{
				return this._LastIssue;
			}
			set
			{
				if ((this._LastIssue != value))
				{
					this.OnLastIssueChanging(value);
					this.SendPropertyChanging();
					this._LastIssue = value;
					this.SendPropertyChanged("LastIssue");
					this.OnLastIssueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enviroments", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Enviroments
		{
			get
			{
				return this._Enviroments;
			}
			set
			{
				if ((this._Enviroments != value))
				{
					this.OnEnviromentsChanging(value);
					this.SendPropertyChanging();
					this._Enviroments = value;
					this.SendPropertyChanged("Enviroments");
					this.OnEnviromentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
